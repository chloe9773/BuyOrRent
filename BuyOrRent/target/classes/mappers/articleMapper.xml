<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="article">
	<!-- 게시글 insert -->
	<insert id="setArticle" parameterType="articlevo">
		INSERT INTO article SET 
			board_id = #{boardId},
			article_type = #{articleType},
			article_title = #{title},
			article_author = #{author},
			article_date = now(),
			content = #{content}
	</insert>
	
	<!-- 게시글 하나 불러오기 -->
	<select id="getArticleOne" parameterType="int" resultType="articlevo">
		<![CDATA[ 
			SELECT
				a.board_id as boardId,  
				a.article_id as articleId,
				a.article_type as articleType,
				a.article_title as title,
				(SELECT usernick FROM member WHERE user_id = a.article_author) as author,
				a.article_date as uploadDate,
				a.article_update as updateDate,
				a.article_hit as hit,
				(SELECT COUNT(*) FROM comments WHERE aid = a.article_id) as commentTotal,
				content,
				(SELECT article_id FROM article WHERE article_id < #{articleId} ORDER BY article_id DESC LIMIT 1) AS prev,
				(SELECT article_id FROM article WHERE article_id > #{articleId} ORDER BY article_id LIMIT 1) AS next 
			FROM article a WHERE a.article_id = #{articleId}
		]]>
	</select>
	
	<!-- 게시판별 게시글 불러오기(공지게시글) -->
	<select id="getNotiArticleForBoard" parameterType="int" resultType="articlevo">
		SELECT 
			a.article_id as articleId,
			a.article_type as articleType,
			a.article_title as title,
			(SELECT usernick FROM member WHERE user_id = a.article_author) as author,
			a.article_date as uploadDate,
			a.article_hit as hit,
			(SELECT COUNT(*) FROM comments WHERE aid = a.article_id) as commentTotal,
			content 
		FROM article a WHERE a.board_id = #{boardId} and a.article_type != 'general' ORDER BY a.article_id
	</select>
	
	<!-- 게시판별 게시글 불러오기(일반게시글) -->
	<select id="getAllArticleForBoard" parameterType="hashmap" resultType="articlevo">
		SELECT 
			a.article_id as articleId,
			a.article_type as articleType,
			a.article_title as title,
			(SELECT usernick FROM member WHERE user_id = a.article_author) as author,
			a.article_date as uploadDate,
			a.article_hit as hit,
			(SELECT COUNT(*) FROM comments WHERE aid = a.article_id) as commentTotal,
			content 
		FROM article a WHERE a.board_id = #{id} and a.article_type != 'noti' ORDER BY a.article_id DESC LIMIT #{start}, #{end}
	</select>
	
	<!-- 게시글 삭제 -->
	<delete id="deleteArticleOne" parameterType="int">
		DELETE FROM article WHERE article_id = #{articleId}
	</delete>
	
	<!-- 게시글 수정 -->
	<update id="updateArticleOne" parameterType="articlevo">
		UPDATE article SET 
			article_title = #{title},
			article_update = now(),
			content = #{content} 
		WHERE article_id = #{articleId}
	</update>
	
	<!-- 모댓글 등록 -->
	<insert id="setComment" parameterType="commentvo">
		<selectKey resultType="int" keyProperty="ref" order="BEFORE">
			SELECT IFNULL(MAX(ref), 0) + 1 FROM comments
		</selectKey>
		INSERT INTO comments SET 
			aid = #{aid},
			author = #{author},
			content = #{cContent},
			regdate = NOW(),
			ref = #{ref},
			ref_order = 0 
	</insert>
	
	<!-- 자식 댓글 순서 조회 -->
	<select id="getReplyCommentRefOrder" parameterType="int" resultType="int">
		SELECT MAX(ref_order) FROM comments WHERE ref = #{ref}
	</select>
	
	<!-- 자식 댓글 등록 -->
	<insert id="setReplyComment" parameterType="commentvo">
		INSERT INTO comments SET 
			aid = #{aid},
			author = #{author},
			content = #{cContent},
			regdate = NOW(),
			ref = #{ref},
			ref_order = #{refOrder} + 1 
	</insert>
	
	<!-- 대댓글 순서 수정 -->
	<!-- <update id="setCommentsRelpyOrder" parameterType="int">
		UPDATE comments SET ref_order = ref_order + 1 WHERE ref = #{ref}
	</update> -->
	
	<!-- 게시글 댓글 가져오기 -->
	<select id="getArticleComments" parameterType="int" resultType="commentvo">
		SELECT 
			cid, aid, 
			(SELECT usernick FROM member WHERE user_id = c.author) AS author, 
			content as cContent, regdate as regDate, update_date as updateDate, ref, ref_order as refOrder    
		FROM comments c WHERE aid = #{articleId} ORDER BY ref, ref_order ASC 
	</select>
	
	<!-- 댓글 정보 가져오기 -->
	<select id="getCommentOne" parameterType="int" resultType="commentvo">
		SELECT 
			cid, aid, 
			(SELECT usernick FROM member WHERE user_id = c.author) AS author, 
			content as cContent, regdate as regDate, update_date as updateDate, ref, ref_order as refOrder    
		FROM comments c WHERE cid = #{cid} 
	</select>
	
	<!-- 연결 댓글 카운트 -->
	<select id="getCommentOneCount" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM comments WHERE ref = #{ref} 
	</select>
	
	<!-- 게시글 댓글 카운트 -->
	<select id="getArticleCommentsTotal" parameterType="int" resultType="int">
		SELECT 
			cid, aid, (SELECT usernick FROM member WHERE user_id = c.author) AS author, 
			content as cContent, regdate as regDate, update_date as updateDate 
		FROM comments c WHERE aid = #{articleId}
	</select>
	
	<!-- 댓글 삭제 -->
	<delete id="deleteCommentOne" parameterType="int">
		DELETE FROM comments WHERE cid = #{cid}
	</delete>
	
	<!-- 댓글 수정 -->
	<update id="updateComment" parameterType="hashmap">
		UPDATE comments SET 
			content = #{content},
			update_date = NOW() 
		WHERE cid = #{cid}
	</update>
</mapper> 